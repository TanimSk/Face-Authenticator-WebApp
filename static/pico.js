pico={},pico.unpack_cascade=function(t){const n=new DataView(new ArrayBuffer(4));let e=8;n.setUint8(0,t[e+0]),n.setUint8(1,t[e+1]),n.setUint8(2,t[e+2]),n.setUint8(3,t[e+3]);const o=n.getInt32(0,!0);e+=4,n.setUint8(0,t[e+0]),n.setUint8(1,t[e+1]),n.setUint8(2,t[e+2]),n.setUint8(3,t[e+3]);const r=n.getInt32(0,!0);e+=4;const i=[],s=[],a=[];for(let c=0;c<r;++c){Array.prototype.push.apply(i,[0,0,0,0]),Array.prototype.push.apply(i,t.slice(e,e+4*Math.pow(2,o)-4)),e=e+4*Math.pow(2,o)-4;for(let r=0;r<Math.pow(2,o);++r)n.setUint8(0,t[e+0]),n.setUint8(1,t[e+1]),n.setUint8(2,t[e+2]),n.setUint8(3,t[e+3]),s.push(n.getFloat32(0,!0)),e+=4;n.setUint8(0,t[e+0]),n.setUint8(1,t[e+1]),n.setUint8(2,t[e+2]),n.setUint8(3,t[e+3]),a.push(n.getFloat32(0,!0)),e+=4}const c=new Int8Array(i),l=new Float32Array(s),u=new Float32Array(a);return function(t,n,e,i,s){t*=256,n*=256;let a=0,f=0;const p=Math.pow(2,o)>>0;for(let h=0;h<r;++h){let r=1;for(let l=0;l<o;++l)r=2*r+(i[(t+c[a+4*r+0]*e>>8)*s+(n+c[a+4*r+1]*e>>8)]<=i[(t+c[a+4*r+2]*e>>8)*s+(n+c[a+4*r+3]*e>>8)]);if(f+=l[p*h+r-p],f<=u[h])return-1;a+=4*p}return f-u[r-1]}},pico.run_cascade=function(t,n,e){const o=t.pixels,r=t.nrows,i=t.ncols,s=t.ldim,a=e.shiftfactor,c=e.minsize,l=e.maxsize,u=e.scalefactor;let f=c;const p=[];for(;f<=l;){const t=Math.max(a*f,1)>>0,e=f/2+1>>0;for(let a=e;a<=r-e;a+=t)for(let r=e;r<=i-e;r+=t){const t=n(a,r,f,o,s);t>0&&p.push([a,r,f,t])}f*=u}return p},pico.cluster_detections=function(t,n){function e(t,n){const e=t[0],o=t[1],r=t[2],i=n[0],s=n[1],a=n[2],c=Math.max(0,Math.min(e+r/2,i+a/2)-Math.max(e-r/2,i-a/2)),l=Math.max(0,Math.min(o+r/2,s+a/2)-Math.max(o-r/2,s-a/2));return c*l/(r*r+a*a-c*l)}t=t.sort((function(t,n){return n[3]-t[3]}));const o=new Array(t.length).fill(0),r=[];for(let i=0;i<t.length;++i)if(0==o[i]){let s=0,a=0,c=0,l=0,u=0;for(let r=i;r<t.length;++r)e(t[i],t[r])>n&&(o[r]=1,s+=t[r][0],a+=t[r][1],c+=t[r][2],l+=t[r][3],u+=1);r.push([s/u,a/u,c/u,l])}return r},pico.instantiate_detection_memory=function(t){let n=0;const e=[];for(let n=0;n<t;++n)e.push([]);return function(t){for(e[n]=t,n=(n+1)%e.length,t=[],i=0;i<e.length;++i)t=t.concat(e[i]);return t}};